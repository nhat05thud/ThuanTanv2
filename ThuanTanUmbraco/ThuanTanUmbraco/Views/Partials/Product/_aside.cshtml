@using System.Xml.Linq
@using ThuanTanUmbraco.ClassHelper
@using ThuanTanUmbraco.Models
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    var current = (IPublishedContent)CurrentPage;
    var paramType = Request.Params["type"];
    var node = new List<IPublishedContent>();
    if (paramType != null)
    {
        if (paramType == Utils.TypeNewProduct)
        {
            node = Model.Content.Site().FirstChild("product")
                .Descendants("productItem")
                .Where(x => x.CreateDate.Date <= DateTime.Now.Date && x.CreateDate >= DateTime.Now.AddDays(-7).Date)
                .OrderByDescending(x => x.CreateDate).ToList();
        }
        else if (paramType == Utils.TypePromoProduct)
        {
            node = Model.Content.Site().FirstChild("product")
                .Descendants("productItem")
                .Where(x => x.GetPropertyValue<int>("promotion") > 0).ToList();
        }
    }
    else
    {
        node = current.Descendants("productItem").ToList();
    }
}
@if (paramType == null)
{
    <div class="wrap-main__aside">
        <img src="/images/ico.png" alt="" />
        <div class="item">
            <a href="@current.Parent.Url">@current.Parent.Name</a>
            <ul class="ul__product--item">
                @foreach (var item in current.Parent.Children)
                {
                    <li @(item.Id == CurrentPage.Id ? "class=active" : null)><a href="@item.Url">@item.Name</a></li>
                }
            </ul>
        </div>
    </div>
}
<div class="wrap-main__aside filter--product">
    <h1>Lọc sản phẩm</h1>
    @{
        var listColors = new List<ProductColor>();
        var items = node;
        var manageProductColors = Model.Content.Site().FirstChild("manageProductColors");
        if (manageProductColors != null)
        {
            foreach (var item in items)
            {
                var colorNested = item.GetPropertyValue<List<IPublishedContent>>("productColors");
                if (colorNested != null)
                {
                    foreach (var color in colorNested)
                    {
                        var getColor = manageProductColors.Children.FirstOrDefault(x => x.Name == color.GetPropertyValue<string>("color"));
                        if (getColor != null)
                        {
                            var colorProperties = new ProductColor
                            {
                                Key = color.GetPropertyValue<string>("color"),
                                Value = getColor.GetPropertyValue<string>("value")
                            };
                            var containsItem = listColors.Any(x => x.Key == colorProperties.Key);
                            if (!containsItem)
                            {
                                listColors.Add(colorProperties);
                            }
                        }
                    }
                }
            }
        }
    }
    @if (listColors.Any())
    {
        <div class="item">
            <h5>Color</h5>
            <ul class="color">
                @*?colors=Almond%2CBrilliantSteel%2CClayPink*@
                @foreach (var item in listColors)
                {
                    var paramColor = Request.Params["colors"];
                    <li @(paramColor != null && paramColor.Split(',').Contains(item.Key.Replace(" ", "")) ? "class=active" : "")>
                        <input type="hidden" class="master__color" value="@item.Key" />
                        <span style="background: rgba@(item.Value)"></span> @item.Key
                    </li>
                }
            </ul>
        </div>
    }
    <div class="item">
        <h5>Dung tích</h5>
        <select id="select-capacity">
            <option value="0" @(Request.Params["capacity"] == null ? "selected" : "")>Chọn dung tích</option>
            <option value="1-10" @(Request.Params["capacity"] != null && Request.Params["capacity"].Replace(",", "-") == "1-10" ? "selected" : "")>1 lít - 10 lít</option>
            <option value="11-20" @(Request.Params["capacity"] != null && Request.Params["capacity"].Replace(",", "-") == "11-20" ? "selected" : "")>11 lít - 20 lít</option>
            <option value="21-30" @(Request.Params["capacity"] != null && Request.Params["capacity"].Replace(",", "-") == "21-30" ? "selected" : "")>21 lít - 30 lít</option>
            <option value="31-40" @(Request.Params["capacity"] != null && Request.Params["capacity"].Replace(",", "-") == "31-40" ? "selected" : "")>31 lít - 40 lít</option>
            <option value="41" @(Request.Params["capacity"] != null && Request.Params["capacity"].Replace(",", "-") == "41" ? "selected" : "")>Hơn 40 lít</option>
        </select>
    </div>
</div>